import math

import drawsvg as draw
import random

import matplotlib as mpl
import matplotlib.pyplot as plt
from numpy import linalg
import numpy as np

# https://cduck.github.io/drawsvg/

e_number = '2718281828459045235360287471352662497757247093699959' \
           '57496696762772407663035354759457138217852516642742746' \
           '63919320030599218174135966290435729003342952605956307' \
           '38132328627943490763233829880753195251019011573834187' \
           '9307021540891499348841675092447614606680822648001684774' \
           '118537423454424371075390777449920695517027618386062613' \
           '313845830007520449338265602976067371132007093287091274' \
           '437470472306969772093101416928368190255151086574637721' \
           '112523897844250569536967707854499699679468644549059879' \
           '316368892300987931277361782154249992295763514822082698' \
           '9519366803318252886939849646510582093923982948879332036' \
           '250944311730123819706841614039701983767932068328237646' \
           '4804295311802328782509819455815301756717361332069811250' \
           '99618188159304169035159888851934580727386673858942287922' \
           '84998920868058257492796104841984443634632449684875602336' \
           '24827041978623209002160990235304369941849146314093431738' \
           '14364054625315209618369088870701676839642437814059271456' \
           '35490613031072085103837505101157477041718986106873969655' \
           '21267154688957035035402123407849819334321068170121005627' \
           '88023519303322474501585390473041995777709350366041699732' \
           '972508868769664035557071622684471625607988265178713419512' \
           '466520103059212366771943252786753985589448969709640975459' \
           '18569563802363701621120477427228364896134225164450781824' \
           '42352948636372141740238893441247963574370263755294448337' \
           '99801612549227850925778256209262264832627793338656648162' \
           '77251640191059004916449982893150566047258027786318641551' \
           '95653244258698294695930801915298721172556347546396447910' \
           '14590409058629849679128740687050489585867174798546677575' \
           '73205681288459205413340539220001137863009455606881667400' \
           '16984205580403363795376452030402432256613527836951177883' \
           '86387443966253224985065499588623428189970773327617178392' \
           '803494650143455889707194258639877275471096295374152111513' \
           '683506275260232648472870392076431005958411661205452970302' \
           '36472549296669381151373227536450988890313602057248176585' \
           '11806303644281231496550704751025446501172721155519486685' \
           '08003685322818315219600373562527944951582841882947876108' \
           '52639813955990067376482922443752871846245780361929819713' \
           '99147564488262603903381441823262515097482798777996437308' \
           '99703888677822713836057729788241256119071766394650706330' \
           '452795466185509666618566470971134447401607046262156807174' \
           '818778443714369882185596709591025968620023537185887485696' \
           '522000503117343920732113908032936344797273559552773490717' \
           '837934216370120500545132638354400018632399149070547977805' \
           '669785335804896690629511943247309958765523681285904138324' \
           '1160722602998330535370876138939639177957454016137223618789' \
           '3652605381558415871869255386061647798340254351284396129460' \
           '3529133259427949043372990857315802909586313826832914771163' \
           '9633709240031689458636060645845925126994655724839186564209' \
           '75268508230754425459937691704197778008536273094171016343490' \
           '76964237222943523661255725088147792231519747780605696725380' \
           '17180776360346245927877846585065605078084421152969752189087' \
           '40196609066518035165017925046195013665854366327125496399085' \
           '49144200014574760819302212066024330096412704894390397177195' \
           '1806990869986066365832322787093765022601492910115171776359' \
           '4460202324930028040186772391028809786660565118326004368850' \
           '8817157238669842242201024950551881694803221002515426494639' \
           '8128736776589276881635983124778865201411741109136011649950' \
           '7662907794364600585194199856016264790761532103872755712699' \
           '2518275687989302761761146162549356495903798045838182323368' \
           '6120162437365698467037858533052758333379399075216606923805' \
           '336988795651372855938834998947074161815501253970646481719' \
           '467083481972144888987906765037959036696724949925452790337' \
           '296361626589760394985767413973594410237443297093554779826' \
           '2961459144293645142861715858733974679189757121195618738578' \
           '3644758448423555581050025611492391518893099463428413936080' \
           '3830916628188115037152849670597416256282360921680751501777' \
           '2538740256425347087908913729172282861151591568372524163077' \
           '2254406337875931059826760944203261924285317018781772960235' \
           '4130606721360460003896610936470951414171857770141806064436' \
           '3681546444005331608778314317444081194942297559931401188868' \
           '3314832802706553833004693290115744147563139997221703804617' \
           '0928945790962716622607407187499753592127560844147378233032' \
           '7033016823719364800217328573493594756433412994302485023573' \
           '2214597843282641421684878721673367010615094243456984401873' \
           '31281010794512722373788612605816566805371439612788873252737' \
           '38903928905068653241380627960259303877276977837928684093253' \
           '658807339884572187460210053114833513238500478271693762180' \
           '049047955979592905916554705057775143081751126989851884087' \
           '185640260353055837378324229241856256442550226721559802740' \
           '126179719280471396006891638286652770097527670697770364392' \
           '6022437284184088325184877047263844037953016690546593746161' \
           '932384036389313136432713768884102681121989127522305625675' \
           '6254701725086349765367288605966752740868627407912856576996' \
           '313789753034660616669804218267724560530660773899624218340' \
           '859882071864682623215080288286359746839654358856685503773' \
           '131296587975810501214916207656769950659715344763470320853' \
           '215603674828608378656803073062657633469774295634643716709' \
           '397193060876963495328846833613038829431040800296873869117' \
           '066666146800015121143442256023874474325250769387077775193' \
           '299942137277211258843608715834835626961661980572526612206' \
           '79754062106208064988291845439530152998209250300549825704' \
           '33905535701686531205264956148572492573862069174036952135' \
           '33732531666345466588597286659451136441370331393672118569' \
           '55395210845840724432383558606310680696492485123263269951' \
           '46035960372972531983684233639046321367101161928217111502' \
           '82801604488058802382031981493096369596735832742024988245' \
           '68494127386056649135252670604623445054922758115170931492' \
           '18795927180019409688669868370373022004753143381810927080' \
           '30017205935530520700706072233999463990571311587099635777' \
           '35902719628506114651483752620956534671329002599439766311' \
           '45459026858989791158370934193704411551219201171648805669' \
           '45938131183843765620627846310490346293950029458341164824' \
           '11496975832601180073169943739350696629571241027323913874' \
           '175492307186245454322203955273529524024590380574450289224' \
           '688628533654221381572213116328811205214648980518009202471' \
           '939171055539011394331668151582884368760696110250517100739' \
           '276238555338627255353883096067164466237092264680967125406' \
           '186950214317621166814009759528149390722260111268115310838' \
           '731761732323526360583817315103459573653822353499293582283' \
           '685100781088463434998351840445170427018938199424341009057' \
           '537625776757111809008816418331920196262341628816652137471' \
           '732547772778348877436651882875215668571950637193656539038' \
           '944936642176400312152787022236646363575550356557694888654' \
           '950027085392361710550213114741374410613444554419210133617' \
           '2996285694899193369184729478580729156088510396781959429833' \
           '1864807560836795514966364489655929481878517840387733262470' \
           '5194505041984774201418394773120281588684570729054405751060' \
           '1285258056594703046836344592652552137008068752009593453607' \
           '3162261187281739280746230946853678231060979215993600199462' \
           '37993434210687813497346959246469752506246958616909178573976' \
           '5951993929939955675427146549104568607020990126068187049841' \
           '7807917392407194599632306025470790177452751318680998228473' \
           '0860766536866855516467702911336827563107223346726113705490' \
           '7953658345386371962358563126183871567741187385277229225947' \
           '4337378569553845624680101390572787101651296663676445187246' \
           '56537304024436841408144887329578473484900030194778880204603' \
           '24660842875351848364959195082888323206522128104190448047247' \
           '94929134228495197002260131043006241071797150279343326340799' \
           '59605314460532304885289729176598760166678119379323724538572' \
           '096075822771784833616135826128962261181294559274627671377944' \
           '87586753657544861407611931125958512655759734573015333642630' \
           '76798544338576171533346232527057200530398828949903425956623' \
           '297578248873502925916682589445689465599265845476269452878051' \
           '650172067478541788798227680653665064191097343452887833862172' \
           '61562695826544782056729877564263253215942944180399432170000' \
           '9054265076309558846589517170914760743713689331946909098190' \
           '4501290307099566226620303182649365733698419555776963787624' \
           '918852865686607600566025605445711337286840205574416030837' \
           '052312242587223438854123179481388550075689381124935386318' \
           '635287083799845692619981794523364087429591180747453419551' \
           '420351726184200845509170845682368200897739455842679214273' \
           '477560879644279202708312150156406341341617166448069815483' \
           '764491573900121217041547872591998943825364950514771379399' \
           '147205219529079396137621107238494290616357604596231253506' \
           '068537651423115349665683715116604220796394466621163255157' \
           '729070978473156278277598788136491951257483328793771571459' \
           '0910648416426783099497236744201758622694021594079244805412' \
           '5536043131799269673915754241929660731239376354213923061787' \
           '67539587114361040894099660894714183406983629936753626215452' \
           '4729846421375289107988438130609555262272083751862983706678' \
           '7224430195793793786072107254277289071732854874374355781966' \
           '511716618330881129120245204048682200072344035025448202834' \
           '254187884653602591506445271657700044521097735585897622655' \
           '4849416217149895323834216001140629507184904277892585527430' \
           '352213968356790180764060421383073087744601708426882722611' \
           '771808426643336517800021719034492342642662922614560043373' \
           '8386833555534345300426481847398921562708609565062934040526' \
           '4943244261445665921291225648893569655009154306426134252668' \
           '4725949143142393988454324863274618428466559853323122104662' \
           '5989014171210344608427161661900125719587079321756969854401' \
           '3397622096749454185407118446433946990162698351607848924514' \
           '05894094639526780735457970030705116368251948770118976400282' \
           '76484141605872061841852971891540196882532893091496653457535' \
           '7142731848201638464483249903788606900807270932767312758196' \
           '656394114896171683298045513972950668760474091542042842999' \
           '3541025829113502241690769431668574242522509026939034814856' \
           '4513030699251995904363840284292674125734224477655841778861' \
           '7173726546208549829449894678735092958165263207225899236876' \
           '8457017823038096567883112289305809140572610865884845873101' \
           '6581511675333276748870148291674197015125597825727074064318' \
           '08601428149024146780472327597684269633935773542930186739439' \
           '7163886117642090040686633988568416810038723892144831760701' \
           '16684503887212364367043314091155733280182977988736590916659' \
           '6124020217785588548761761619893707943800566633648843650891' \
           '44805571039765214696027662583599051987042300179465536789'

pi_number = '314159265358979323846264338327950288419716939937510' \
            '58209749445923078164062862089986280348253421170679' \
            '82148086513282306647093844609550582231725369154495' \
            '87196202546254399102534602031340359642843665440272' \
            '12069215943595139508012475692954599679411918121173' \
            '42942063040293577778783047052931650057536697320417' \
            '07972854902135844325625298889420641258066664202073' \
            '68475692618677620816824692229984289511080718876068' \
            '32100239939757234316322022119788183517677868967303' \
            '19141416286753270466001648497435820992474374991568' \
            '19600643671893691305354708308710166805101060348891' \
            '41171703865748610683789629422759550265758748349208' \
            '54206277682826162592833034085901313400959648095635' \
            '44007802699616816659523160072601869086055145016609' \
            '18686453384677967234796490096573470672589862240989' \
            '84904749420467328772230350164815038081480932499016' \
            '02648174338550696179703218344214315552744648376188' \
            '88125451320923991610865223537070564258521385482102' \
            '65989001555789588259131852688818330199422563456101' \
            '80383948414416704950379151848530970843582673263758' \
            '22279922176206364531760058669977567033823451266107' \
            '40442475261591701535436581779074465264357297878670' \
            '47553624660157168687419835382593402680731866239524' \
            '23656269083177926658015661951672230734195755205890' \
            '02512265227065287459401181761226810053130657159892' \
            '82564205576653382807014309377214855543523053861650' \
            '73659563834210564203807733863515710126762454754572' \
            '61777365736608221674182403548571281260332510077719' \
            '84619071824774451893335145720537816022699724314009' \
            '94322895400229463224744164995599364304157452097375' \
            '67547155225234126466278364797721659246685157837810' \
            '88983151816548574691177843380391125264995775950424' \
            '22372130217488148916487049504966713489977088672546' \
            '26436102062859811982184686263901065734843757485766' \
            '73202274295698050003681013275265598420867926639665' \
            '91545958293385394433840000233134955521092313779296' \
            '49774045368638624640820616582909401554683315455353' \
            '39142970137064615818148184378877010901960310659265' \
            '16401097788320574209400209305296582249949039443456' \
            '25764372629681240927795496702065657498690307937394' \
            '88080874760064437170559981524159419620014706894227' \
            '26815820400630008398154478110079379943791504636542' \
            '69825846073858518258352117115052437945203335608135' \
            '38959411339480418464414739055098925182195488810715' \
            '75074214336228823238363841086383121584480959354878' \
            '08452271730032881682050905595029595548232802579223' \
            '75507746968890048344566852540307748843919613338584' \
            '75683799066245887862060065831663161825760579354957' \
            '96477542135179401765961315911096415032344537877473' \
            '16450933951973170850552761220213923591258035403312' \
            '18333620078796097392765172816105363834550306912315' \
            '06117510611824499195298695208445221746634453188013' \
            '51121749698977561713215155081999709604127858464557' \
            '39810134615071210231565327456746911864075937446861' \
            '66664870579067547584645657146796437123273012696498' \
            '24029734995301161709175668172006036335780056958808' \
            '62103863888498945791057337340197031612999226034278' \
            '45572550793180582672356165305633119424966239116959' \
            '58847072492894650267764548751858871909542772233263' \
            '45461702895382346344276640304926042627561897761279' \
            '31857861969045142675424737065641031920645226926312' \
            '09390470857358288898459985574701628088678334085655' \
            '23089793286315242951481290356959685108992062921182' \
            '73519308994498587005316155268283958330034615470408' \
            '90895769962734610066885851085845151133438050154794' \
            '55255939483319445605564267589522861646232540493775' \
            '40497714311160230156379163230095901918356175865629' \
            '37300272447634186568326278608935813076533186338416' \
            '74946035972261671372097788456061699636013736175512' \
            '00551040489688871547578300042877086836893309808460' \
            '11899716726811763530846559120865242876493720336405' \
            '35858623252900818502433160989579598764476626008554' \
            '65166492239075979673990612063443284504007870320246' \
            '45585033111254417082564960259609303899136605666784' \
            '97200556173061439006221081812712024421594177251124' \
            '66117734532153664329528982738008317117777446795381' \
            '09561718711848594573039191578338326831642589559254' \
            '74753075507435085249441183725460262291865112817923' \
            '72718196913079411913182811010983657331646794101666' \
            '69861942074728264123708751703660121188981683992445' \
            '02594677976444801745090170738660196934798934002352' \
            '73646036288780354392485326217559138063773520678444' \
            '95291911707529898463507640941902607723952663147526' \
            '34577572278165330451975671119414528936545244027534' \
            '46949059102102884189362047236666417734272071285769' \
            '65306791264384185558256270176126931953020435881538' \
            '27955803055217473986407580491439960154171685551455' \
            '70172298751238410975007587029671193752255699490427' \
            '44780253562669046225094580221772856180749112715727' \
            '83165808422048807570918280871551929339187463383324' \
            '84680177873347952607740221309738065292261983007989' \
            '77476123923043260544428658660475985321703282343957' \
            '29511956233244115084252080268930111426668966675077' \
            '31762724965738363854132759027364685265453242282175' \
            '42223806478945815528425690019325036273706136588547' \
            '90645527976461195014041575501020752364694594575998' \
            '34477593613145857614092273362172118278111536839492' \
            '59049512020319721752226864154352574930277242734003' \
            '78834941822779818903756726238207266733446497838373' \
            '94262221177283400442367910226058426031668496560181' \
            '52627075920777316083249218730368883078026132551242' \
            '26309052804975933805703871142396613271336906281606' \
            '04425198029210450532685740187409892228484290432457' \
            '43834299657048065092721571991952897822357244387526' \
            '10347848656169545435261539009895037966026077908898' \
            '87752480241070165837924000277864433189073612331408' \
            '12025171519420745448607704765096302546837751342552' \
            '97752789973775198715411680599144900966697312247284' \
            '03249001574203141011670779709131539430771293277380' \
            '60394210429246740501481717055471188412427501201970' \
            '84287321454582572536354823947174767622511450642453' \
            '13067932500884554273862258272885869624450585721869' \
            '86746891888842399214429161533331222943452174374583' \
            '81409071837782890539081367601144764846319212203576' \
            '12140786652631730578126330967486557382246522716139' \
            '39578826056061727860511917639049331863210664406130' \
            '75540100030155739903670562054022278448550480869804' \
            '17418474833158965401965375741627941166621018663877' \
            '08810467574557689740979159292722742792659675335216' \
            '00592947087941648658874743194060862917025037565390' \
            '21850870254708228937431702997372145071648408522935' \
            '62274008130335286467797313840112974972197203752766' \
            '66051758324407317922549138252231214786379286577311' \
            '67098195533601259112812745887222509309119001240003' \
            '53890346178815528772855492132799617887568539758007' \
            '67243164963722462983070467965315155490479700737674' \
            '51530068790720126887162338987860427038476583405122' \
            '40726338807381328617488321807012865440408983821472' \
            '36344200015156469437502095394307839793545173733646' \
            '89387154282106195578698687617317359287498880699697' \
            '43470907178080476171066774687193325431056555547812' \
            '95902153534266812484702696311161306560338028168441' \
            '10045399010796537660742991512704783877253465288552' \
            '91578904898717093423923107085757511155270734978129' \
            '63373957261955456540259483744865676734174390768969' \
            '42352344129054870111756020008060200530613816328667' \
            '94570764313664548797941041344403599324166676473441' \
            '28954268752642108058197147040522584946068725427579' \
            '33074475139556150217328747497640162847183886617181' \
            '14811506115102427273719866979432902642404005020114' \
            '44697397955964702959888777232418566429932332058665' \
            '43663033383074420984673469214832050422525418680629' \
            '08281568098623467772741449216596562358408062634227' \
            '30089954514064016177510932492637969653181706780348' \
            '88795939226414874696742587528448442860219889147141' \
            '43492951672874423023969656052392970344983868229783' \
            '72664987648476416021365727048619544860353565122925' \
            '13389323562509496918674210976633761716026837116965' \
            '08772920140839372054517241370558268188828867038970' \
            '45797443932413020347726647007525025690545995239819' \
            '69795747286074579623031157427527855271261222136563' \
            '58463879823852835387837140118089963813736552666298' \
            '50852801484631413370374735840261998094370161277225' \
            '34547775018021347590743522069171513145269457111308' \
            '85144664321468217762572757689534911249343405192359' \
            '44226773302359440942641001082466010123351199571656' \
            '65553466661853928036708888766998932557834775176273' \
            '69017618903263393926002110357531205596231575644186' \
            '89728581283515517655473199047482670232952013840435' \
            '05672146287578417342512222520250101347720949188857' \
            '63409554835666694822010805624266522542805517365646' \
            '91994646911926721816237078509288348225178660869210' \
            '58587732524630885670616907087461007166253203485132' \
            '89882649207377370489311671917699355028875486968316' \
            '30383944778107957134557027220729136423634084056029' \
            '92611644805424169098443519795983737857104496504641' \
            '96505066761085457858896021544320317801270260071863' \
            '57775717712838092464186516128162048306820621775858' \
            '45559287777900624755649909364511076780689014108972' \
            '50002181703776310606804718290194697840399129949946' \
            '98046100765417653087479984220382586641385738709661' \
            '85728553063166622700183682654643992001243529042031' \
            '57577770523455757190371119946594767980916334927083' \
            '00310067488139629541627546634262709178783278631227' \
            '39069877650897670878285054257440305815468850199044' \
            '17373706177840816329627115621311540181511154889920' \
            '87709276839316991421929652702248026574396273973939' \
            '26993359101795199920794164546177404910247431416828' \
            '46875919828799875724214378313636448190607755600299' \
            '56982008962021147264631291119391330917055253222408' \
            '88141488905032449665826837340578540813557164936064' \
            '49842016260619865560453751397782772673037633446150' \
            '08033946660235196112579058972878682718537615206450' \
            '92448400248956000859412212738328757221329332462221' \
            '58169914913841280068344783556076616747685075581168' \
            '36758562844800762858710281688784243516685841502780' \
            '86597089389872550718774904098061812242691517996929' \
            '66738855351210442521110305960117368283818365759694' \
            '28775884043697655265601064824570680176483220988530' \
            '07721422649466707546008999199963359116454411554332' \
            '72246906011024901717964441745939342677612999353464' \
            '31328634386846275896614761446582825886806727930992' \
            '26618048184611097808869794717831428475372465263656' \
            '83441261508243409199111409636246350929113797823988' \
            '20743731591421756704681475583215910856084888162063' \
            '28150349518234669169004573377060780358380799502743' \
            '52712859421633606452007836153536796786318981894278' \
            '55690883502214851842270401003369713319581247696156' \
            '29106443475273176155597178473595447766335346729699' \
            '14075507738291259134062818355653469054759153126204'


def diff():
    diff_str = ''
    for i in range(min(len(pi_number), len(e_number))):
        diff_str = diff_str + str((int(math.fabs(int(pi_number[i]) - int(e_number[i])))))
    return diff_str


def sequence_view(number, filename):
    nr_rows = 25
    nr_columns = 25
    radius = 5

    cmap = plt.get_cmap('tab10')

    width = 2 * (nr_columns * (radius * 2))
    height = 2 * (nr_rows * (radius * 2))
    d = draw.Drawing(width, height, origin=(0, 0))

    for i in range(nr_rows):
        for j in range(nr_columns):
            k = (i * nr_columns) + j
            digit = int(number[k])
            color = mpl.colors.rgb2hex(cmap(digit / 9.0))

            # connect horizontal
            if j < (nr_columns - 1):
                if number[k] == number[k + 1]:
                    d.append(draw.Line(sx=(2 * j * (radius * 2)) + radius,
                                       sy=(2 * i * (radius * 2)) + radius,
                                       #
                                       ex=(2 * (j + 1) * (radius * 2)) + radius,
                                       ey=(2 * i * (radius * 2)) + radius,
                                       #
                                       stroke=color,
                                       stroke_width=5.0))

            # connect vertical and diagonal
            if i < (nr_rows - 1):
                if number[k] == number[k + nr_columns]:
                    d.append(draw.Line(sx=(2 * j * (radius * 2)) + radius,
                                       sy=(2 * i * (radius * 2)) + radius,
                                       #
                                       ex=(2 * j * (radius * 2)) + radius,
                                       ey=(2 * (i + 1) * (radius * 2)) + radius,
                                       #
                                       stroke=color,
                                       stroke_width=5.0))

                if j > 0 and number[k] == number[k + nr_columns - 1]:
                    d.append(draw.Line(sx=(2 * j * (radius * 2)) + radius,
                                       sy=(2 * i * (radius * 2)) + radius,
                                       #
                                       ex=(2 * (j - 1) * (radius * 2)) + radius,
                                       ey=(2 * (i + 1) * (radius * 2)) + radius,
                                       #
                                       stroke=color,
                                       stroke_width=5.0))

                if j < (nr_columns - 1) and number[k] == number[k + nr_columns + 1]:
                    d.append(draw.Line(sx=(2 * j * (radius * 2)) + radius,
                                       sy=(2 * i * (radius * 2)) + radius,
                                       #
                                       ex=(2 * (j + 1) * (radius * 2)) + radius,
                                       ey=(2 * (i + 1) * (radius * 2)) + radius,
                                       #
                                       stroke=color,
                                       stroke_width=5.0))

            # draw circle
            d.append(draw.Circle(cx=(2 * j * (radius * 2)) + radius,
                                 cy=(2 * i * (radius * 2)) + radius,
                                 r=radius,
                                 fill=color))

    d.set_pixel_scale(2)  # Set number of pixels per geometry unit
    d.save_svg(filename)


def pi():
    cmap = plt.get_cmap('tab10')

    nr_points_rows = 100
    nr_points_columns = 100

    width = 2000
    height = 2000
    radius = 5

    d = draw.Drawing(width, height, origin='center')
    k = 0
    for i in range(nr_points_rows):
        for j in range(nr_points_columns):
            digit = int(pi_number[k])
            k = k + 1

            if k < len(pi_number):
                if pi_number[k - 1] == pi_number[k]:
                    d.append(draw.Line(sx=(width / nr_points_columns * j) - (width / 2) + radius * 2,
                                       sy=(height / nr_points_rows * i) - (height / 2) + radius * 2,
                                       #
                                       ex=(width / nr_points_columns * (j + 1)) - (width / 2) + radius * 2,
                                       ey=(height / nr_points_rows * i) - (height / 2) + radius * 2,
                                       #
                                       fill='black',
                                       stroke='black',
                                       stroke_width=4.0))

            color = mpl.colors.rgb2hex(cmap(digit / 9.0))
            d.append(draw.Circle(cx=(width / nr_points_columns * j) - (width / 2) + radius * 2,
                                 cy=(height / nr_points_rows * i) - (height / 2) + radius * 2,
                                 r=radius,
                                 fill=color))

    d.set_pixel_scale(2)  # Set number of pixels per geometry unit
    d.save_svg('pi1.svg')


def sipersnki():
    triangle = np.array([[-300, -300], [300, -300], [0, 300]])
    max_dist = max(linalg.norm(triangle[0] - triangle[1]),
                   linalg.norm(triangle[0] - triangle[2]),
                   linalg.norm(triangle[1] - triangle[2]))
    cmap = plt.get_cmap('tab10')

    point = np.array([0, 0])
    nr_points = 10000

    d = draw.Drawing(800, 800, origin='center')
    for k in range(nr_points):
        vertex = random.randint(0, 2)
        color = mpl.colors.rgb2hex(cmap(linalg.norm(point - triangle[vertex]) / max_dist))

        point = [(point[0] + triangle[vertex][0]) / 2, (point[1] + triangle[vertex][1]) / 2]
        d.append(draw.Circle(point[0], point[1], 1, fill=color, stroke='black', stroke_width=0.1))

    d.set_pixel_scale(2)  # Set number of pixels per geometry unit
    d.save_svg('sipersnki.svg')


def svg_test():
    d = draw.Drawing(200, 100, origin='center')

    # Draw an irregular polygon
    d.append(draw.Lines(-80, 45,
                        70, 49,
                        95, -49,
                        -90, -40,
                        close=False,
                        fill='#eeee00',
                        stroke='black'))

    # Draw a rectangle
    r = draw.Rectangle(-80, -50, 40, 50, fill='#1248ff')
    r.append_title("Our first rectangle")  # Add a tooltip
    d.append(r)

    # Draw a circle
    d.append(draw.Circle(-40, 10, 30,
                         fill='red', stroke_width=2, stroke='black'))

    # Draw an arbitrary path (a triangle in this case)
    p = draw.Path(stroke_width=2, stroke='lime', fill='black', fill_opacity=0.2)
    p.M(-10, -20)  # Start path at point (-10, -20)
    p.C(30, 10, 30, -50, 70, -20)  # Draw a curve to (70, -20)
    d.append(p)

    # Draw text
    d.append(draw.Text('Basic text', 8, -10, -35, fill='blue'))  # 8pt text at (-10, -35)
    d.append(draw.Text('Path text', 8, path=p, text_anchor='start', line_height=1))
    d.append(draw.Text(['Multi-line', 'text'], 8, path=p, text_anchor='end', center=True))

    # Draw multiple circular arcs
    d.append(draw.ArcLine(60, 20, 20, 60, 270,
                          stroke='red', stroke_width=5, fill='red', fill_opacity=0.2))
    d.append(draw.Arc(60, 20, 20, 90, -60, cw=True,
                      stroke='green', stroke_width=3, fill='none'))
    d.append(draw.Arc(60, 20, 20, -60, 90, cw=False,
                      stroke='blue', stroke_width=1, fill='black', fill_opacity=0.3))

    # Draw arrows
    arrow = draw.Marker(-0.1, -0.51, 0.9, 0.5, scale=4, orient='auto')
    arrow.append(draw.Lines(-0.1, 0.5, -0.1, -0.5, 0.9, 0, fill='red', close=True))
    p = draw.Path(stroke='red', stroke_width=2, fill='none',
                  marker_end=arrow)  # Add an arrow to the end of a path
    p.M(20, 40).L(20, 27).L(0, 20)  # Chain multiple path commands
    d.append(p)
    d.append(draw.Line(30, 20, 0, 10,
                       stroke='red', stroke_width=2, fill='none',
                       marker_end=arrow))  # Add an arrow to the end of a line

    d.set_pixel_scale(2)  # Set number of pixels per geometry unit
    # d.set_render_size(400, 200)  # Alternative to set_pixel_scale
    d.save_svg('example.svg')
    # d.save_png('example.png')

    # Display in Jupyter notebook
    # d.rasterize()  # Display as PNG
    # d  # Display as SVG


# Press the green button in the gutter to run the script.
if __name__ == '__main__':
    sequence_view(e_number, 'e.svg')
    sequence_view(pi_number, 'pi.svg')
    sequence_view(diff(), 'diff.svg')

# See PyCharm help at https://www.jetbrains.com/help/pycharm/
